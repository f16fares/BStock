// <auto-generated />
using System;
using BStock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BStock.Migrations
{
    [DbContext(typeof(StockDbContext))]
    [Migration("20250418180319_SectionRelationship")]
    partial class SectionRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BStock.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("SectionId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Notes = "",
                            Price = 20,
                            ProductName = "Pizza"
                        },
                        new
                        {
                            ProductId = 2,
                            Notes = "",
                            Price = 10,
                            ProductName = "Salad"
                        },
                        new
                        {
                            ProductId = 3,
                            Notes = "",
                            Price = 5,
                            ProductName = "Bread"
                        },
                        new
                        {
                            ProductId = 4,
                            Notes = "",
                            Price = 1,
                            ProductName = "Water"
                        },
                        new
                        {
                            ProductId = 5,
                            Notes = "",
                            Price = 5,
                            ProductName = "Cola"
                        },
                        new
                        {
                            ProductId = 6,
                            Notes = "",
                            Price = 10,
                            ProductName = "Pepsi"
                        },
                        new
                        {
                            ProductId = 7,
                            Notes = "",
                            Price = 5,
                            ProductName = "Inc Pen"
                        },
                        new
                        {
                            ProductId = 8,
                            Notes = "",
                            Price = 10,
                            ProductName = "Stack of Paper"
                        },
                        new
                        {
                            ProductId = 9,
                            Notes = "",
                            Price = 10,
                            ProductName = "Scissors"
                        });
                });

            modelBuilder.Entity("BStock.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BodyNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("BStock.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SectionName = "Food"
                        },
                        new
                        {
                            Id = 2,
                            SectionName = "Drinks"
                        },
                        new
                        {
                            Id = 3,
                            SectionName = "Office Items"
                        });
                });

            modelBuilder.Entity("BStock.Models.Product", b =>
                {
                    b.HasOne("BStock.Models.Receipt", null)
                        .WithMany("Products")
                        .HasForeignKey("ReceiptId");

                    b.HasOne("BStock.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("BStock.Models.Receipt", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
